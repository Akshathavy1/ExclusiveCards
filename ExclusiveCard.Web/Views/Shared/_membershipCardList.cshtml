@using System.Globalization
@model List<ExclusiveCard.WebAdmin.ViewModels.CustomerDetailsMembershipCardsViewModel>

<div class="directdisplay" id="membershipcarddetails">

    @foreach (var item in @Model)
    {
        <div class="accordion">
            <div class="accordion-item">
                <a class="active"><span>Expiry Date: @Convert.ToDateTime(@item.ExpiryDate).ToString("dd MMM yyyy", CultureInfo.InvariantCulture)</span></a>
                <div class="infos active">
                <p>
                    <div class="form-horizontal">
                        <div class="form-group row">
                            @Html.LabelFor(m => item.PlanName, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                <span class="cardtoggledetails">@item.PlanName</span>
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(m => item.CardNumber, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                <span class="cardtoggledetails">@item.CardNumber</span>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(m => item.DateIssued, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                <span class="cardtoggledetails">@item.DateIssued?.ToString("dd MMM yyyy")</span>
                            </div>
                        </div>
                        @*<div class="form-group row">
                            @Html.LabelFor(m => item.ExpiryDate, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                <span class="form-control  roundedInput disabled">@item.ExpiryDate?.ToString("dd MMM yyyy hh:mm:ss")</span>
                            </div>
                        </div>*@
                        <div class="form-group row">
                            @Html.LabelFor(m => item.Status, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @if (item.Status == "Active")
                                {
                                    <span class="col-md-4 cardtoggledetails crdstats">@item.Status</span>
                                    <button type="button" class="btn btnAction btnEnable col-md-12 has-spinner hidden">Activate Card <span class="spinner"><i class="fa fa-spinner fa-spin"></i></span></button>
                                    <button type="button" class="btn btnAction btnDisable col-md-12 has-spinner">Cancel Card <span class="spinner"><i class="fa fa-spinner fa-spin"></i></span></button>
                                }
                                else if (item.Status == "Cancelled")
                                {
                                    <span class="col-md-4 cardtoggledetails crdstats">@item.Status</span>
                                    <button type="button" class="btn btnAction btnEnable col-md-12 has-spinner">Activate Card <span class="spinner"><i class="fa fa-spinner fa-spin"></i></span></button>
                                    <button type="button" class="btn btnAction btnDisable col-md-12 has-spinner hidden">Cancel Card <span class="spinner"><i class="fa fa-spinner fa-spin"></i></span></button>
                                }
                                else
                                {
                                    <span class="cardtoggledetails crdstats">@item.Status</span>
                                }
                            </div>
                        </div>
                        @if (!string.IsNullOrEmpty(item.RegistrationCode))
                        {
                            <div class="form-group row">
                                @Html.LabelFor(m => item.RegistrationCode, htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    <span class="form-control  roundedInput disabled">@item.RegistrationCode</span>
                                </div>
                            </div>

                        }
                        <br/>
                        <div class="form-group row">
                            @Html.LabelFor(m => item.CardRequest, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.RadioButtonFor(m => @item.CardRequest, "True")<span class="cardrequst">YES</span><br />
                                @Html.RadioButtonFor(m => @item.CardRequest, "False")<span class="cardrequst">NO</span>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(m => item.CardStatus, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.DropDownListFor(model => @item.CardStatus, item.CardStatusList, "Select", htmlAttributes: new { @class = "form-control roundedInput dropdownInputs", cardId = @item.Id })
                            </div>
                        </div>
                    </div>
                </p>
                </div>
            </div>
        </div>
    }

</div>
<div id="dialog-confirm" title="disableConfirmation">
    <p id="infoMessage"></p>
</div>


        @*<div id="membershipcarddetails">
            @if (Model.Count > 1)
            {
                @foreach (var item in @Model)
                {
                    <div class="accordion">
                        <div class="accordion-item">
                            <a><span>Expiry Date: @Convert.ToDateTime(@item.ExpiryDate).ToString("dd MMM yyyy", CultureInfo.InvariantCulture)</span></a>
                            <div class="infos">
                                <p>
                                    <div class="form-horizontal">
                                        <div class="form-group row">
                                            @Html.LabelFor(m => item.PlanName, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-6">
                                                <span class="form-control  roundedInput disabled">@item.PlanName</span>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(m => item.CardNumber, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-6">
                                                <span class="form-control  roundedInput disabled">@item.CardNumber</span>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            @Html.LabelFor(m => item.DateIssued, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-6">
                                                <span class="form-control  roundedInput disabled">@item.DateIssued?.ToString("dd MMM yyyy hh:mm:ss")</span>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            @Html.LabelFor(m => item.Status, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-6">
                                                <span class="form-control  roundedInput disabled">@item.Status</span>
                                            </div>
                                        </div>
                                        @if (!string.IsNullOrEmpty(item.RegistrationCode))
                                        {
                                            <div class="form-group row">
                                                @Html.LabelFor(m => item.RegistrationCode, htmlAttributes: new { @class = "control-label col-md-6" })
                                                <div class="col-md-6">
                                                    <span class="form-control  roundedInput disabled">@item.RegistrationCode</span>
                                                </div>
                                            </div>

                                        }
                                        <div class="form-group row">
                                            @Html.LabelFor(m => item.CardRequest, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-6">
                                                @Html.RadioButtonFor(m => @item.CardRequest, "True")<span class="cardrequst">YES</span><br />
                                                @Html.RadioButtonFor(m => @item.CardRequest, "False")<span class="cardrequst">NO</span>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            @Html.LabelFor(m => item.CardStatus, htmlAttributes: new { @class = "control-label col-md-6" })
                                            <div class="col-md-6">
                                                @Html.DropDownListFor(model => @item.CardStatus, item.CardStatusList, "Select", htmlAttributes: new { @class = "form-control roundedInput dropdownInputs", cardId = @item.Id })
                                            </div>
                                        </div>
                                    </div>
                                </p>
                            </div>
                        </div>
                    </div>
                }                }
        </div>*@




        <script type="text/javascript">
            var items = document.querySelectorAll(".accordion a");

            function toggleAccordion() {
                this.classList.toggle('active');
                this.nextElementSibling.classList.toggle('active');
            }

            items.forEach(item => item.addEventListener('click', toggleAccordion));
        </script>




