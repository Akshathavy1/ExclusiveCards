@model ExclusiveCard.WebAdmin.ViewModels.OfferSearchViewModel
@{
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewData["Title"] = "Search for Offers";
}
@*@using (Html.BeginForm())
{*@
    @Html.AntiForgeryToken()
<div id="mainDiv" class="col-md-12 Searchforoffers divone">
    @Html.ValidationSummary(false, "", new { @class = "text-danger", autofocus = "autofocus" })
    <div class="form-group row">
        <div class="col-md-12">
            <h1 class="col-md-6" id="title-name">Search for Offers</h1>
            <button type="button" id="btnAddOffer" class="col-md-5 btn pull-right ">Add Offer</button>
        </div>
    </div>
    <div class="form-horizontal form-group row merchantDiv">
        @Html.LabelFor(model => model.MerchantId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.MerchantId, Model.ListofMerchants,"Select Merchant", htmlAttributes: new { @class = "form-control roundedInput", @placeholder = "Enter Merchant" })
            @Html.ValidationMessageFor(model => model.MerchantId, "", new { @class = "text-danger col-md-12" })
        </div>

    </div>
    <div class=" form-horizontal form-group row">
         @Html.LabelFor(model => model.AffiliateId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.AffiliateId, Model.ListofAffiliate, "Select Affiliate", htmlAttributes: new { @class = "form-control roundedInput dropdownInput" })
            @Html.ValidationMessageFor(model => model.AffiliateId, "", new { @class = "text-danger col-md-12" })
        </div>
        @Html.LabelFor(model => model.Keyword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Keyword,new { htmlattributes = new { @class = "form-control roundedInput", @placeholder ="Enter Text"} })
            @Html.ValidationMessageFor(model => model.Keyword, "", new { @class = "text-danger col-md-12" })
        </div>
    </div>

    <div class="form-horizontal form-group row">
        @Html.LabelFor(model => model.ValidFrom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.ValidFrom, "{0:yyyy-MM-dd}", new { @class = "form-control roundedInput", Type = "date" })
            @Html.ValidationMessageFor(model => model.ValidFrom, "", new { @class = "text-danger col-md-12" })
        </div>

        @Html.LabelFor(model => model.ValidTo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.ValidTo, "{0:yyyy-MM-dd}", new { @class = "form-control roundedInput", Type = "date" })
            @Html.ValidationMessageFor(model => model.ValidTo, "", new { @class = "text-danger col-md-12" })
        </div>

    </div>
    <div class="form-horizontal form-group row">
        @Html.LabelFor(model => model.OfferType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.OfferType, Model.ListofOfferType, "Select Type", htmlAttributes: new { @class = "form-control roundedInput dropdownInput" })
            @Html.ValidationMessageFor(model => model.OfferType, "", new { @class = "text-danger col-md-12" })
        </div>
        @Html.LabelFor(model => model.OfferStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.OfferStatus, Model.ListofStatus, "Select Status", htmlAttributes: new { @class = "form-control roundedInput dropdownInput" })
            @Html.ValidationMessageFor(model => model.OfferStatus, "", new { @class = "text-danger col-md-12" })
        </div>
    </div>
    <div class="form-group">
        
        <button type="button" id="btnSearchOffer" class="btn pull-right has-spinner">
            Search<span class="spinner"><i class="fa fa-spinner fa-spin"></i></span>
        </button>
    </div>
</div>

<div id="secondDiv" class="col-md-12 divtwo">
    @{
        @await Html.PartialAsync("_offersList", @Model.OffersList)
    }
</div>
@*}*@
@section Scripts
    {
    <script src="~/js/Exclusive/offer.js"></script>
    <script type="text/javascript">
        $(window).resize(function () {
            if ($(window).width() >= 767) {
                $("#offersMain").click();
            }
        });
        Offer.setUpEvents();
        Offer.kendoUIBind();
    </script>
}