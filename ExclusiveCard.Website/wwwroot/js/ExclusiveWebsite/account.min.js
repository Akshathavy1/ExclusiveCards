var Account = function () { "use strict"; var e, t = !1, a = !1, n = ""; function s(e, t) { var a = $.Deferred(); return $("#infoMessage").html(t), $("#dialog-confirm").dialog({ title: e, draggable: !1, autoResize: !0, resizable: !1, open: function () { $(this).closest(".ui-dialog").find(".ui-dialog-titlebar-close").hide() }, modal: !0, buttons: { Close: { id: "btnYesId", text: "Close", click: function () { $("#infoMessage").html(""), $(this).dialog("close"), a.resolve("Yes") }, class: "btnYes" } } }), a.promise() } function o(e) { $("#PaidByEmployer").val(), $("#DiamondUpgrade").val(); var t = ""; null !== e && (t = e.serialize()), $.ajax({ url: "/Account/Save", beforeSend: function () { }, type: "POST", data: t, cache: !1, complete: function () { }, success: function (e) { e.success ? (e.data.id > 0 && window.buttonLoading(document.querySelector("#btnContinue"), !1, n), setTimeout(function () { window.location.href = "/Home" }, 1500)) : (window.buttonLoading(document.querySelector("#btnContinue"), !1, n), $("#customError").html(e.errorMessage), $("#customError").removeClass("hideContent"), window.scrollTo(0, 1150)) }, error: function (e, a, s) { window.buttonLoading(document.querySelector("#btnContinue"), !1, n), $("#customError").val(t.errorMessage), $("#customError").removeClass("hideContent"), window.scrollTo(0, 1150) } }) } function i(e) { $.ajax({ url: "/Account/CreateAddOn", beforeSend: function () { }, type: "POST", data: e.serialize(), cache: !1, complete: function () { }, success: function (e) { e.success ? (e.data.id > 0 && toastr.success("Membership card created succesfully."), setTimeout(function () { window.location.href = "/Account/AccountSummary" }, 1500)) : null !== e.errorMessage && ($("#btnContinuePayment").prop("disabled", !1), toastr.error(e.errorMessage)) }, error: function (e, t, a) { "" === e.responseText ? (toastr.success("Membership card created succesfully."), setTimeout(function () { window.location.href = "/Account/AccountSummary" }, 1500)) : toastr.error(e.responseText) } }) } function r(e) { var t = $("#CustomerId").val(); "" === t && (t = null), $.get("/account/RegisterValidation", { code: e, customerId: t }, function (e, a, n) { if (e.success) { if ("" !== e.data.Name) { var o = e.data.cardCost; "" === t || null == t || "0.00" != parseFloat(o).toFixed(2) && 0 != parseFloat(o).toFixed(2) && 0 != parseFloat(o).toFixed(2) ? window.location.href = "" !== t && null != t && o > 0 ? "/Account/SelectPayment/?country=" + countrySelected + "&customerId=" + parseInt(t) + "&membershipPlanId=" + e.data.membershipPlanId + "&token=" + e.data.token : "/Account/CreateAccount/?country=" + countrySelected + "&membershipPlanId=" + e.data.membershipPlanId + "&token=" + e.data.token : (i = countrySelected, r = parseInt(t), d = e.data.membershipPlanId, l = e.data.token, $.ajax({ url: "/Account/CreateAddOnFree/?countryCode=" + i + "&customerId=" + r + "&membershipPlanId=" + d + "&token=" + l, beforeSend: function () { }, type: "POST", data: null, cache: !1, complete: function () { }, success: function (e) { e.success ? (e.data.id > 0 && toastr.success("Membership card created succesfully."), setTimeout(function () { window.location.href = "/Account/AccountSummary" }, 1500)) : null !== e.errorMessage && toastr.error(e.errorMessage) }, error: function (e, t, a) { "" === e.responseText ? (toastr.success("Membership card created succesfully."), setTimeout(function () { window.location.href = "/Account/AccountSummary" }, 1500)) : ($("#btnAccountSetup").prop("disabled", !1), toastr.error(e.responseText)) } })) } $("#btnAccountSetup").removeClass("active"), $("#btnAccountSetup").prop("disabled", !1) } else $.when(s("The registration code entered is invalid.", e.errorMessage)), $("#btnAccountSetup").removeClass("active"), $("#btnAccountSetup").prop("disabled", !1); var i, r, d, l }) } function d() { if ($("#Check").is(":checked")) { var a = ""; if (null != e) a = e.serialize(); else a = $("#btnContinuePayment").closest("form").serialize(); var n = $("#Id").val(); "" === n || "0" === n || void 0 === n ? $.ajax({ url: "/PayPal/PayPalRequest", beforeSend: function () { $("#waitpaypal").show() }, type: "POST", data: a, cache: !1, complete: function () { $("#waitpaypal").hide() }, success: function (e) { e.success ? ($("#customerPaymentProviderId").val(e.data), t = !0, $("#submitAccountForm").submit()) : ($("#submitAccountForm").prop("disabled", !1), toastr.error(e.errorMessage)) }, error: function (e, t, a) { $("#submitAccountForm").prop("disabled", !1), toastr.error(e.responseText) } }) : "" !== n && $.ajax({ url: "/PayPal/AddOnPayPalRequest", beforeSend: function () { $("#waitpaypal").show() }, type: "POST", data: a, cache: !1, complete: function () { $("#waitpaypal").hide() }, success: function (e) { e.success ? ($("#customerPaymentProviderId").val(e.data), t = !0, $("#submitAccountForm").submit()) : ($("#submitAccountForm").prop("disabled", !1), toastr.error(e.errorMessage)) }, error: function (e, t, a) { $("#submitAccountForm").prop("disabled", !1), toastr.error(e.responseText) } }) } else $("#submitAccountForm").prop("disabled", !1), toastr.error("Please select agree terms and continue") } document.querySelectorAll(".accordion a"); return { setUpEvents: function () { $("#close_window").on("click", function () { window.close() }), $("#btnBuyNow").unbind().click(function () { $(this).toggleClass("active"), $(this).prop("disabled", !0); var e = $("#CustomerId").val(); "" === e ? window.location.href = "/Account/CreateAccount/?country=" + countrySelected + "&membershipPlanId=" + defaultMembershipPlan : "" !== e && function (e) { $.get("/account/ValidateDefaultPlan", { customerId: e }, function (t, a, n) { t.success ? window.location.href = "/Account/SelectPayment/?country=" + countrySelected + "&customerId=" + parseInt(e) + "&membershipPlanId=" + defaultMembershipPlan : ($.when(s("Warning!", t.errorMessage)), $("#btnBuyNow").removeClass("active"), $("#btnBuyNow").prop("disabled", !1)) }) }(e) }), $("#btnAccountSetup").unbind().click(function (e) { e.preventDefault(), $(this).toggleClass("active"), $(this).prop("disabled", !0); var t = $("#registerCode").val(); null != t && "" !== t ? r(t) : (toastr.error("Please enter registration code and continue"), $(this).toggleClass("active"), $(this).prop("disabled", !1)) }), $("#Tick").is(":checked") ? ($(".bothcards").show(), $(".singlecard").hide(), $("#hostedbuttonid").val($("#SubscribeAppAndCardRef").val())) : ($("#Addressone").attr("disabled", !0), $("#Addresstwo").attr("disabled", !0), $("#Addressthree").attr("disabled", !0), $("#Town").attr("disabled", !0), $("#County").attr("disabled", !0), $("#hostedbuttonid").val($("#SubscribeAppRef").val()), $(".bothcards").hide(), $(".singlecard").show()), $("#Tick").change(function (e) { e.preventDefault(), $("#Tick").is(":checked") ? ($("#Addressone").removeAttr("disabled"), $("#Addresstwo").removeAttr("disabled"), $("#Addressthree").removeAttr("disabled"), $("#Town").removeAttr("disabled"), $("#County").removeAttr("disabled"), $("#hostedbuttonid").val($("#SubscribeAppAndCardRef").val()), $(".bothcards").show(), $(".singlecard").hide()) : ($("#Addressone").attr("disabled", !0), $("#Addresstwo").attr("disabled", !0), $("#Addressthree").attr("disabled", !0), $("#Town").attr("disabled", !0), $("#County").attr("disabled", !0), $("#hostedbuttonid").val($("#SubscribeAppRef").val()), $(".bothcards").hide(), $(".singlecard").show()) }), $("#marketing").change(function (e) { e.preventDefault(); var t = $(this).is(":checked"); $("#MarketingPreference").val(t) }), $("#btnContinue").unbind().click(function (t) { t.preventDefault(), n = $("#btnContinue")[0].innerText, window.buttonLoading(document.querySelector("#btnContinue"), !0, "Creating Account"), $("#customError").hasClass("hideContent") || $("#customError").addClass("hideContent"), $("#msgError").hasClass("hideContent") || $("#msgError").addClass("hideContent"), $("#remember").hasClass("--invalid") && $("#remember").removeClass("--invalid"); var a, s, i, r, d, l, c, u, m, h, p, v, f, C = $(this).closest("form"); if (a = !0, s = $("#Title").val(), i = $("#Forename").val(), r = $("#Surname").val(), d = $("#Email").val(), l = $("#Confirmemail").val(), c = $("#Password").val(), u = $("#ConfirmPassword").val(), m = $("#Postcode").val(), h = $("#QuestionId").val(), p = $("#Answer").val(), v = new RegExp("^[A-Z]{1,2}[0-9][A-Z0-9]? ?[0-9][A-Z]{2}$"), f = new RegExp("^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&^#])[A-Za-z\\d@$!%*?&^#]{8,48}$"), null == s || "" === s.trim() ? (a = !1, $("#Title").hasClass("--invalid") || $("#Title").addClass("--invalid")) : $("#Title").removeClass("--invalid"), null == i || "" === i.trim() ? (a = !1, $("#Forename").hasClass("--invalid") || $("#Forename").addClass("--invalid")) : $("#Forename").removeClass("--invalid"), null == r || "" === r.trim() ? (a = !1, $("#Surname").hasClass("--invalid") || $("#Surname").addClass("--invalid")) : $("#Surname").removeClass("--invalid"), null == d || "" === d.trim() ? (a = !1, $("#Email").hasClass("--invalid") || $("#Email").addClass("--invalid")) : $("#Email").removeClass("--invalid"), null == l || "" === l.trim() ? (a = !1, $("#Confirmemail").hasClass("--invalid") || $("#Confirmemail").addClass("--invalid")) : $("#Confirmemail").removeClass("--invalid"), null == c || "" === c.trim() ? (a = !1, $("#Password").hasClass("--invalid") || $("#Password").addClass("--invalid")) : $("#Password").removeClass("--invalid"), null == u || "" === u.trim() ? (a = !1, $("#ConfirmPassword").hasClass("--invalid") || $("#ConfirmPassword").addClass("--invalid")) : $("#ConfirmPassword").removeClass("--invalid"), null == m || "" === m.trim() ? (a = !1, $("#Postcode").hasClass("--invalid") || $("#Postcode").addClass("--invalid")) : $("#Postcode").removeClass("--invalid"), null == h || "" === h.trim() ? (a = !1, $("#QuestionId").hasClass("--invalid") || $("#QuestionId").addClass("--invalid")) : $("#QuestionId").removeClass("--invalid"), null == p || "" === p.trim() ? (a = !1, $("#Answer").hasClass("--invalid") || $("#Answer").addClass("--invalid")) : $("#Answer").removeClass("--invalid"), d.trim() !== l && (a = !1, $("#Confirmemail").hasClass("--invalid") || $("#Confirmemail").addClass("--invalid"), $("#Email").hasClass("--invalid") || $("#Email").addClass("--invalid")), c.trim() !== u && (a = !1, $("#ConfirmPassword").hasClass("--invalid") || $("#ConfirmPassword").addClass("--invalid"), $("#Password").hasClass("--invalid") || $("#Password").addClass("--invalid")), f.test(c) || (a = !1, $("#ConfirmPassword").hasClass("--invalid") || $("#ConfirmPassword").addClass("--invalid"), $("#Password").hasClass("--invalid") || $("#Password").addClass("--invalid")), v.test(m) || (a = !1, $("#Postcode").hasClass("--invalid") || $("#Postcode").addClass("--invalid")), a) if ($("#Email").val() !== $("#Confirmemail").val()) window.buttonLoading(document.querySelector("#btnContinue"), !1, n), $("#msgError").hasClass("hideContent") && $("#msgError").removeClass("hideContent"), window.scrollTo(0, 1150); else if ($("#Password").val() !== $("#ConfirmPassword").val()) window.buttonLoading(document.querySelector("#btnContinue"), !1, n), $("#msgError").hasClass("hideContent") && $("#msgError").removeClass("hideContent"), window.scrollTo(0, 1150); else if ($("#remember").is(":checked")) { var b = $("#Token").val(), w = parseFloat($("#CardCost").val()).toFixed(2); null == b || "" === b || "0.00" !== w && 0 !== w && 0 !== w ? (e = C, $(".accountFormDiv").addClass("hidden"), $("#ChoosePaymentScreen").removeClass("hidden"), window.scrollTo(0, 1150)) : o(C) } else window.buttonLoading(document.querySelector("#btnContinue"), !1, n), $("#customError").hasClass("hideContent") && ($("#customError").removeClass("hideContent"), $("#customError").html("Please accept Terms and Conditions to continue.")), window.scrollTo(0, 1150); else $("#msgError").hasClass("hideContent") && $("#msgError").removeClass("hideContent"), window.buttonLoading(document.querySelector("#btnContinue"), !1, n), window.scrollTo(0, 1150) }), $("a, button").click(function () { $(this).toggleClass("active") }), function (e) { e.fn.circliful = function (t, a) { var n = e.extend({ fgcolor: "#556b2f", bgcolor: "#eee", fill: !1, width: 15, dimension: 200, fontsize: 15, percent: 50, animationstep: 1, iconsize: "20px", iconcolor: "#999", border: "default", complete: null }, t); return this.each(function () { var a, s = ["fgcolor", "bgcolor", "fill", "width", "dimension", "fontsize", "animationstep", "endPercent", "icon", "iconcolor", "iconsize", "border"], o = {}, i = "", r = 0, d = e(this), l = !1; if (d.addClass("circliful"), function (t) { e.each(s, function (a, s) { void 0 !== t.data(s) ? o[s] = t.data(s) : o[s] = e(n).attr(s), "fill" == s && void 0 !== t.data("fill") && (l = !0) }) }(d), void 0 !== d.data("text") && (a = d.data("text"), void 0 !== d.data("icon") && (i = e("<i></i>").addClass("fa " + e(this).data("icon")).css({ color: o.iconcolor, "font-size": o.iconsize })), void 0 !== d.data("type") && "half" === (P = e(this).data("type")) ? A(d, "circle-text-half", o.dimension / 1.45) : A(d, "circle-text", o.dimension)), void 0 !== e(this).data("total") && null != e(this).data("part")) { var c = e(this).data("total") / 100; (e(this).data("part") / c / 100).toFixed(3), r = (e(this).data("part") / c).toFixed(3) } else void 0 !== e(this).data("percent") ? (e(this).data("percent"), r = e(this).data("percent")) : n.percent; void 0 !== e(this).data("info") && (e(this).data("info"), void 0 !== e(this).data("type") ? (P = e(this).data("type"), S(d, "half" === P ? .9 : 1.25)) : S(d, 1.25)), e(this).width(o.dimension + "px"); var u = e("<canvas></canvas>").attr({ width: o.dimension, height: o.dimension }).appendTo(e(this)).get(0), m = u.getContext("2d"), $ = u.width / 2, h = u.height / 2, p = (o.percent, Math.PI, u.width / 2.5), v = 2.3 * Math.PI, f = 0, C = 0 === o.animationstep ? r : 0, b = Math.max(o.animationstep, 0), w = 2 * Math.PI, g = Math.PI / 2, P = "", y = !0; function A(t, n, s) { e("<span></span>").appendTo(t).addClass(n).text(a).prepend(i).css({ "line-height": s + "px", "font-size": o.fontsize + "px" }) } function S(t, a) { e("<span></span>").appendTo(t).addClass("circle-info-half").css("line-height", o.dimension * a + "px") } void 0 !== e(this).data("type") && "half" === (P = e(this).data("type")) && (v = 2 * Math.PI, f = 3.13, w = 1 * Math.PI, g = Math.PI / .996), function a(n) { m.clearRect(0, 0, u.width, u.height), m.beginPath(), m.arc($, h, p, f, v, !1), m.lineWidth = o.width + 1, m.strokeStyle = o.bgcolor, m.stroke(), l && (m.fillStyle = o.fill, m.fill()), m.beginPath(), m.arc($, h, p, -g, w * n - g, !1), "outline" === o.border ? m.lineWidth = o.width + 13 : "inline" === o.border && (m.lineWidth = o.width - 13), m.strokeStyle = o.fgcolor, m.stroke(), C < r && (C += b, requestAnimationFrame(function () { a(Math.min(C, r) / 100) }, d)), C === r && y && void 0 !== t && e.isFunction(t.complete) && (t.complete(), y = !1) }(C / 100) }) } }(jQuery), $(document).ready(function () { $(".pendingCh").circliful(), $(".confirmedCh").circliful(), $(".receivedCh").circliful() }), $("#question-mark-pending").click(function () { $.when(s("Pending Title", "Pending Message")) }), $("#question-mark-confirmed").click(function () { $.when(s("Confirmed Title", " Confirmed Message")) }), $("#question-mark-received").click(function () { $.when(s("Received Title", " Received Message")) }), $("input[type=radio][name=PaymentType]").change(function () { "PayPal" === this.value ? ($("#paypalbutton").show(), $("#btnContinuePayment").hide()) : ($("#paypalbutton").hide(), $("#btnContinuePayment").show()) }), $("#btnContinuePayment").unbind().click(function (t) { if (t.preventDefault(), $(this).prop("disabled", !0), $("input[type=radio][name=PaymentType]").prev().length > 0) { var a = $("input[type=radio][name=PaymentType]:checked").val(); void 0 === a || "" === a ? ($(this).prop("disabled", !1), $(this).toggleClass("active"), toastr.error("Please select Payment Option")) : $("#Check").is(":checked") ? "Cashback" === a.trim() && (void 0 === e ? i($(this).closest("form")) : o(e)) : ($(this).prop("disabled", !1), $(this).toggleClass("active"), toastr.error("Please select agree terms and continue")) } else $("#Check").is(":checked") ? "Cashback" === a.trim() && (void 0 === e ? i($(this).closest("form")) : o(e)) : ($(this).prop("disabled", !1), $(this).toggleClass("active"), toastr.error("Please select agree terms and continue")) }), $("#submitAccountForm").unbind().submit(function () { if ($(this).prop("disabled", !0), t) return t = !1, !0; if ($("input[type=radio][name=PaymentType]").prev().length > 0) { var e = $("input[type=radio][name=PaymentType]:checked").val(); void 0 === e || "" === e ? ($(this).prop("disabled", !1), toastr.error("Please select Payment Option")) : d() } else d(); return !1 }), $("#btnback").click(function (e) { $("#AccountFormDiv").removeClass("hidden"), $("#ChoosePaymentScreen").addClass("hidden"), $("#btnContinue").toggleClass("active"), window.scrollTo(0, 0) }), $("#btnPaymentback").click(function (e) { e.preventDefault(), window.history.back() }), $("#statementPaging #pager a").each(function () { $(this).unbind().click(function (e) { e.preventDefault(), function (e, t, a, n) { window.location.href = "/Account/AccountStatement/?country=" + countrySelected + "&customerId=" + t + "&cardId=" + a + "&currentPage=" + e + "&accountStatus" + n }($(this).attr("pagenumber"), $(this).closest("#CustomerId"), $(this).closest("#CardId"), $(this).closest("#AccountStatus")) }) }), $("#CardId").change(function (e) { e.preventDefault(); var t = $(this).find(":selected").val(), a = $("#CustomerId").val(); "" !== t && "" !== a && function (e, t) { window.location.href = "/Account/AccountSummary/?country=" + countrySelected + "&customerId=" + t + "&cardId=" + e }(t, a) }), $(".paylatercash").hide(), $("#submitOrderPayment").unbind().submit(function (e) { return $("#btnPayPalOrder").prop("disabled", !0), a ? (a = !1, !0) : (t = $("#MembershipPlanId").val(), $.ajax({ url: "/PayPal/PayPalRequestUpgradeAccount", beforeSend: function () { }, type: "POST", data: { MembershipPlanId: t }, cache: !1, complete: function () { }, success: function (e) { console.log(e), e.success ? ($("#customerPaymentProviderId").val(e.data), a = !0, $("#submitOrderPayment").submit()) : ($("#btnPayPalOrder").prop("disabled", !1), console.log(e.errorMessage)) }, error: function (e, t, a) { $("#btnPayPalOrder").prop("disabled", !1), console.log(e.responseText) } }), !1); var t }), $("#diamond-upgrade").unbind().change(function (e) { e.preventDefault(), $("#diamond-upgrade").is(":checked") ? $("#DiamondUpgrade").val(!0) : $("#DiamondUpgrade").val(!1) }), $("#Postcode").unbind().blur(function (e) { e.preventDefault(); var t = new RegExp("^[A-Z]{1,2}[0-9][A-Z0-9]? ?[0-9][A-Z]{2}$"), a = $(this).val().toUpperCase(); a.length > 0 && ($(this).val(a), t.test(a) ? ($("#Postcode").hasClass("--invalid") && $("#Postcode").removeClass("--invalid"), $("#customError").hasClass("hideContent") || $("#customError").addClass("hideContent")) : ($("#customError").html("Postcode is invalid."), $("#customError").removeClass("hideContent"), $("#Postcode").hasClass("--invalid") || $("#Postcode").addClass("--invalid"))) }) }, termsHidden: function () { $(".search").hide(), $("#myTopnav").hide(), $(".mm-dropdown").hide() }, planDescription: function () { var e; e = 200, $(".planDescDiv").each(function () { var t = $(this).text().trim(), a = t.slice(0, e) + "<span class='ellipsis'>&nbsp;</span><a href='#' class='more'>Read more</a><span style='display:none'>" + t.slice(e, t.length) + "<a href='#' class='less'>Hide</a></span>"; t.length < e || $(this).html(a) }), $(".more").click(function (e) { e.preventDefault(), $(this).hide().prev().hide(), $(this).next().show() }), $(".less").click(function (e) { e.preventDefault(), $(this).parent().hide().prev().show().prev().show() }) } } }();