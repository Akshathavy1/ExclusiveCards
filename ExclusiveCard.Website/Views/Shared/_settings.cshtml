@model SettingsViewModel
@inject IViewLocalizer Localizer
@{
  
    var layoutModel = (LayoutViewModel)@ViewBag.LayoutModel;
}

<div class="__column --span-12 --span-8--md">
    <h2>@Localizer["Title"]</h2>
    <form class="c_form-container u_margin-bottom--s3" role="form">
        <h2 class="__title">@Localizer["Personal"]</h2>
        <p id="personalSuccess" class="__notice js_auto-center c_notification --positive hideContent"></p>
        <p id="personalError" class="__notice js_auto-center c_notification --negative hideContent"></p>
        @Html.HiddenFor(m => m.CustomerId)
        @Html.HiddenFor(m => m.ContactDetailId)
        @Html.HiddenFor(m => m.Forename)
        @Html.HiddenFor(m => m.Surname)
        @Html.HiddenFor(m => m.Email)
        @Html.HiddenFor(m => m.DateOfBirth)
        @Html.HiddenFor(m => m.Postcode)
        <div class="c_form-group">
            @Html.LabelFor(m => m.Forename, new { @class = "_label" })
            <input type="text" name="full_name" value="@Model.Forename" id="full_name" minlength="2" maxlength="100">
        </div>
        <div class="c_form-group">
            @Html.LabelFor(m => m.Surname, new { @class = "_label" })
            <input type="text" name="sur_name" value="@Model.Surname" id="sur_name" minlength="2" maxlength="100">
        </div>
        <div class="c_form-group">
            @Html.LabelFor(m => m.Email, new { @class = "_label" })
            <input type="email" name="email" value="@Model.Email" id="email" placeholder="example@email.com" maxlength="128" >
        </div>
        @*<div class="c_form-group">
            @Html.LabelFor(m => m.DateOfBirth, new { @class = "_label" })
            @Html.TextBoxFor(model => model.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control roundedInput", Type = "date", @readonly = "readonly" })
        </div>*@
        <div class="c_form-group">
            @Html.LabelFor(m => m.Address1, new { @class = "_label" })
            <input type="text" name="Address1" value="@Model.Address1" id="Address1" maxlength="128">
        </div>
        <div class="c_form-group">
            @Html.LabelFor(m => m.Address2, new { @class = "_label" })
            <input type="text" name="Address2" value="@Model.Address2" id="Address2" maxlength="128">
        </div>
        <div class="c_form-group">
            @Html.LabelFor(m => m.Address3, new { @class = "_label" })
            <input type="text" name="Address3" value="@Model.Address3" id="Address3" maxlength="128">
        </div>
        <div class="c_form-group">
            @Html.LabelFor(m => m.Town, new { @class = "_label" })
            <input type="text" name="Town" value="@Model.Town" id="Town" maxlength="128">
        </div>
        <div class="c_form-group">
            @Html.LabelFor(m => m.District, new { @class = "_label" })
            <input type="text" name="District" value="@Model.District" id="District" maxlength="128">
        </div>
        <div class="c_form-group">
            @Html.LabelFor(m => m.Postcode, new { @class = "_label" })
            <input type="text" name="postcode" value="@Model.Postcode" id="postcode" maxlength="10">
        </div>
        @*<div class="c_form-group">
            @Html.LabelFor(m => m.NationalInsuranceNumber, new { @class = "_label" })
            @if (!string.IsNullOrEmpty(Model.NationalInsuranceNumber))
            {
                @Html.EditorFor(model => model.NationalInsuranceNumber, new { htmlAttributes = new { @class = "form-control", minlength = 9, maxlength = "13", placeholder = "AB 12 34 56 C", @readonly = "readonly" } })
            }
            else
            {
                @Html.EditorFor(model => model.NationalInsuranceNumber, new { htmlAttributes = new { @class = "form-control", minlength = 9, maxlength = "13", placeholder = "AB 12 34 56 C" } })
                @Html.ValidationMessageFor(model => model.NationalInsuranceNumber, "", new { @class = "text-danger" })

            }
            <p>@Localizer["NationalNumber"]</p>
        </div>*@
        <div class="c_form-group --actions">
            <div class="c_form-group --confirm">
                @if (Model.MarketingNewsLetter)
                {
                    <input type="checkbox" name="marketing" value="yes" id="marketing" checked="checked">
                }
                else
                {
                    <input type="checkbox" name="marketing" value="yes" id="marketing">
                }
                <label for="marketing">@Html.GetWhiteLabel(Localizer["Marketing"].Value.ToString(), layoutModel.WhiteLabel)</label>
            </div>
        </div>
        <div class="c_form-group --actions">
            <button type="button" id="personal">Submit</button>
        </div>
    </form>
    <form class="c_form-container u_margin-bottom--s3" role="form">
        <h2 class="__title">Change Password</h2>
        <p id="passwordSuccess" class="__notice js_auto-center c_notification --positive hideContent"></p>
        <p id="passwordError" class="__notice js_auto-center c_notification --negative hideContent"></p>
        <div class="c_form-group">
            @Html.LabelFor(m => m.CurrentPassword, new { @class = "_label" })
            @Html.EditorFor(model => model.CurrentPassword, new { htmlAttributes = new { @class = "form-control", minlength = 8, maxlength = 128, type = "password" } })
            @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
        </div>
        <div class="c_form-group">
            @Html.LabelFor(m => m.NewPassword, new { @class = "_label" })
            @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control", minlength = 8, maxlength = 128, type = "password" } })
            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            <p>@Localizer["Rule"]</p>
        </div>
        <div class="c_form-group u_margin-bottom--none">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "_label" })
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", minlength = 8, maxlength = 128, type = "password" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>

       

        <div class="c_form-group --actions">
            <button type="submit" id="password">Submit</button>
        </div>
    </form>

    <form class="c_form-container u_margin-bottom--s3" role="form">

        <p id="securitySuccess" class="__notice js_auto-center c_notification --positive hideContent"></p>
        <p id="securityError" class="__notice js_auto-center c_notification --negative hideContent"></p>
        <h2 class="__title">Security Questions</h2>

        <div class="c_form-group">
            <label for="QuestionId">Security Question <span class="__required">@Localizer["Required"]</span></label>
            @Html.DropDownListFor(model => model.QuestionId, Model.ListofQuestion, "Select Question", htmlAttributes: new { @class = "dropdownInput" })
            @Html.ValidationMessageFor(model => model.QuestionId, "", new { @class = "text-danger" })
        </div>
        <div class="c_form-group">
            <label for="Answer">Security Question Answer <span class="__required">@Localizer["Required"]</span></label>
            @Html.EditorFor(model => model.Answer, new { htmlAttributes = new { maxlength = 128 } })
            @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
        </div>

        <div class="c_form-group --actions">
            <button type="submit" id="security">Submit</button>
        </div>


    </form>
</div>